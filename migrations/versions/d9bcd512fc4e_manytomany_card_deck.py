"""manytomany card deck

Revision ID: d9bcd512fc4e
Revises: d59967fa4b6e
Create Date: 2023-07-03 07:42:33.520373

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "d9bcd512fc4e"
down_revision = "d59967fa4b6e"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "deck_card",
        sa.Column("deck_id", sa.Integer(), nullable=False),
        sa.Column("card_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["card_id"],
            ["card.id"],
        ),
        sa.ForeignKeyConstraint(
            ["deck_id"],
            ["deck.id"],
        ),
        sa.PrimaryKeyConstraint("deck_id", "card_id"),
    )
    with op.batch_alter_table("card", schema=None) as batch_op:
        batch_op.add_column(sa.Column("rarity", sa.String(length=64), nullable=True))
        batch_op.create_index(batch_op.f("ix_card_rarity"), ["rarity"], unique=False)
        # batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column("deck_id")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("card", schema=None) as batch_op:
        batch_op.add_column(sa.Column("deck_id", sa.INTEGER(), nullable=True))
        batch_op.create_foreign_key(None, "deck", ["deck_id"], ["id"])
        batch_op.drop_index(batch_op.f("ix_card_rarity"))
        batch_op.drop_column("rarity")

    op.drop_table("deck_card")
    # ### end Alembic commands ###
